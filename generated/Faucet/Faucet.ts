// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DonateToken extends ethereum.Event {
  get params(): DonateToken__Params {
    return new DonateToken__Params(this);
  }
}

export class DonateToken__Params {
  _event: DonateToken;

  constructor(event: DonateToken) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RequestToken extends ethereum.Event {
  get params(): RequestToken__Params {
    return new RequestToken__Params(this);
  }
}

export class RequestToken__Params {
  _event: RequestToken;

  constructor(event: RequestToken) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Faucet extends ethereum.SmartContract {
  static bind(address: Address): Faucet {
    return new Faucet("Faucet", address);
  }

  amountAllowed(): BigInt {
    let result = super.call("amountAllowed", "amountAllowed():(uint256)", []);

    return result[0].toBigInt();
  }

  try_amountAllowed(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "amountAllowed",
      "amountAllowed():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBalanceOfFaucet(tokenAddress: Address): BigInt {
    let result = super.call(
      "getBalanceOfFaucet",
      "getBalanceOfFaucet(address):(uint256)",
      [ethereum.Value.fromAddress(tokenAddress)]
    );

    return result[0].toBigInt();
  }

  try_getBalanceOfFaucet(tokenAddress: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBalanceOfFaucet",
      "getBalanceOfFaucet(address):(uint256)",
      [ethereum.Value.fromAddress(tokenAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lockTime(param0: Address, param1: Address): BigInt {
    let result = super.call("lockTime", "lockTime(address,address):(uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBigInt();
  }

  try_lockTime(param0: Address, param1: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lockTime",
      "lockTime(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DonateTofaucetCall extends ethereum.Call {
  get inputs(): DonateTofaucetCall__Inputs {
    return new DonateTofaucetCall__Inputs(this);
  }

  get outputs(): DonateTofaucetCall__Outputs {
    return new DonateTofaucetCall__Outputs(this);
  }
}

export class DonateTofaucetCall__Inputs {
  _call: DonateTofaucetCall;

  constructor(call: DonateTofaucetCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DonateTofaucetCall__Outputs {
  _call: DonateTofaucetCall;

  constructor(call: DonateTofaucetCall) {
    this._call = call;
  }
}

export class RequestTokenCall extends ethereum.Call {
  get inputs(): RequestTokenCall__Inputs {
    return new RequestTokenCall__Inputs(this);
  }

  get outputs(): RequestTokenCall__Outputs {
    return new RequestTokenCall__Outputs(this);
  }
}

export class RequestTokenCall__Inputs {
  _call: RequestTokenCall;

  constructor(call: RequestTokenCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RequestTokenCall__Outputs {
  _call: RequestTokenCall;

  constructor(call: RequestTokenCall) {
    this._call = call;
  }
}

export class SetAmountallowedCall extends ethereum.Call {
  get inputs(): SetAmountallowedCall__Inputs {
    return new SetAmountallowedCall__Inputs(this);
  }

  get outputs(): SetAmountallowedCall__Outputs {
    return new SetAmountallowedCall__Outputs(this);
  }
}

export class SetAmountallowedCall__Inputs {
  _call: SetAmountallowedCall;

  constructor(call: SetAmountallowedCall) {
    this._call = call;
  }

  get newAmountAllowed(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAmountallowedCall__Outputs {
  _call: SetAmountallowedCall;

  constructor(call: SetAmountallowedCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}
